---
name: Learning workflows
on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Hello world
        run: echo "Hello world"
        shell: bash




  second hello job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Hello world 2
        run: echo "Hello world 2"



















##projects/221742135820/locations/global/workloadIdentityPools/workload-identity-demo/providers/wif-demo-oidc
#
#name: Run gcloud commands to list maven packages
#on:
#  push:
#    branches:
#      - main
#env:
#  PROJECT_ID: github-actions-384318
#  PROJECT_NO: 221742135820
#
#jobs:
#  terraform:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - id: 'auth'
#        name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          create_credentials_file: 'true'
#          workload_identity_provider: 'projects/221742135820/locations/global/workloadIdentityPools/dev-github-wif-my-pool/providers/dev-github-wif-my-pool'
#          service_account: 'test-wif@github-actions-384318.iam.gserviceaccount.com'
#
#
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#        with:
#          version: '>= 363.0.0'
#
#      - name: run terraform commands
#        run: gcloud secrets versions access 1 --secret="testing-secret"
#
#
#name: Connect to GCP and List Instances
#
#on:
#  push:
#    branches: [ "main" ]
#
#env:
#  PROJECT_ID: github-actions-384318
#
#jobs:
#  setup-prepare-list:
#    name: Setup, Prepare,
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v3
#
#    # Configure Workload Identity Federation and generate an access token.
#    - id: 'auth'
#      name: 'Authenticate to Google Cloud'
#      uses: 'google-github-actions/auth@v1'
#      with:
#        token_format: 'access_token'
#        workload_identity_provider:  'projects/221742135820/locations/global/workloadIdentityPools/github-bucket/providers/gh-bucket'
#        service_account: 'test-wif@github-actions-384318.iam.gserviceaccount.com'
#
#    # List the instances in the project
#    - name: List Instances
#      run: gcloud container images list --repository=gcr.io/github-actions-384318
#
##gcloud iam service-accounts add-iam-policy-binding "test-wif@github-actions-384318.iam.gserviceaccount.com" --project="github-actions-384318" --role="roles/iam.serviceAccountTokenCreator" --member=principal://iam.googleapis.com/projects/221742135820/locations/global/workloadIdentityPools/github-bucket/subject/SUBJECT_ATTRIBUTE_VALUE
#
#
#
#
#gcloud iam service-accounts add-iam-policy-binding \
#  test-wif@github-actions-384318.iam.gserviceaccount.com \
#  --member=principal://iam.googleapis.com/projects/221742135820/locations/global/workloadIdentityPools/github-bucket/subject/SUBJECT_ATTRIBUTE_VALUE  \
#  --role=roles/iam.serviceAccountTokenCreator
#
#
#
#---
#name: Build and Push Python Image to Google Cloud Platform
#on:
#  push:
#    branches: [ main ]
#jobs:
#  build-push-gcr:
#    name: Build and Push to GCP
#    runs-on: ubuntu-latest
#    env:
#      IMAGE_NAME: lesson-087
#      PROJECT_ID: github-actions-384318
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - uses: google-github-actions/setup-gcloud@v0.3.0
#      with:
#        service_account_key: ${{ secrets.SA }}
#        project_id: github-actions-384318
#        export_default_credentials: true
#
#    - name: Build Docker Image
#      run: docker build -t $IMAGE_NAME:latest .
#
#
#    - name: Configure Docker Client
#      run: |-
#        gcloud auth configure-docker --quiet
#
#    - name: Push Docker Image to Container Registry (GCR)
#      env:
#        GIT_TAG: v0.1.0
#      run: |-
#        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
#        docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
#        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
#        docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
#
#
